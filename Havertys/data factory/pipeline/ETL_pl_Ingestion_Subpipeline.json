{
	"name": "ETL_pl_Ingestion_Subpipeline",
	"properties": {
		"activities": [
			{
				"name": "LookUp_JobConfigurationMetadataList",
				"description": "This LookUp calls a stored procedure and returns the metadata for the source tables that need to be copied to Azure Data Lake",
				"type": "Lookup",
				"dependsOn": [],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderStoredProcedureName": "[dbo].[usp_JobConfigurationMetadataList]",
						"storedProcedureParameters": {
							"MasterProcessNumber": {
								"type": "Int32",
								"value": {
									"value": "@pipeline().parameters.MasterProcessNumber",
									"type": "Expression"
								}
							}
						}
					},
					"dataset": {
						"referenceName": "ds_framework",
						"type": "DatasetReference"
					},
					"firstRowOnly": false
				}
			},
			{
				"name": "ForEach_CopyStagingRaw",
				"description": "This ForEach loops through the metadata list and copies data nto Staging and Raw in Azure Data Lake.",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "LookUp_JobConfigurationMetadataList",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('LookUp_JobConfigurationMetadataList').output.value",
						"type": "Expression"
					},
					"isSequential": false,
					"batchCount": 5,
					"activities": [
						{
							"name": "Copy_ADLStaging_ADLRaw",
							"description": "This activity copies data from the ADL Staging location into a Raw storage folder. File path and name are dynamically derived from the Metadata lookup.",
							"type": "Copy",
							"dependsOn": [
								{
									"activity": "Delete_ExistingRaw",
									"dependencyConditions": [
										"Completed"
									]
								},
								{
									"activity": "Switch_ServerName",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "BinarySource",
									"storeSettings": {
										"type": "AzureBlobFSReadSettings",
										"recursive": true,
										"wildcardFileName": "*",
										"enablePartitionDiscovery": false
									}
								},
								"sink": {
									"type": "BinarySink",
									"storeSettings": {
										"type": "AzureBlobFSWriteSettings"
									}
								},
								"enableStaging": false,
								"parallelCopies": {
									"value": "@pipeline().parameters.JobParallelism",
									"type": "Expression"
								}
							},
							"inputs": [
								{
									"referenceName": "ds_adlsv2_autoresolveintegrationruntime_datalake_directory_binary",
									"type": "DatasetReference",
									"parameters": {
										"FolderPath": {
											"value": "@concat( item().DataLakeStagingFolder, '/', replace(item().TargetSchemaTable, '.', '_'))",
											"type": "Expression"
										}
									}
								}
							],
							"outputs": [
								{
									"referenceName": "ds_adlsv2_autoresolveintegrationruntime_datalake_directory_binary",
									"type": "DatasetReference",
									"parameters": {
										"FolderPath": {
											"value": "@concat(replace(concat( item().DataLakeStagingFolder, '/', replace(item().TargetSchemaTable, '.', '_')), 'staging', 'raw'), '/TS=',string(item().StartTime))",
											"type": "Expression"
										}
									}
								}
							]
						},
						{
							"name": "LookUp_JobTableLogStart",
							"description": "This LookUp calls a stored procedure which updates the status in the JobTableLog for each table being copied and returns JobTableLogID.",
							"type": "Lookup",
							"dependsOn": [],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "AzureSqlSource",
									"sqlReaderStoredProcedureName": "[dbo].[usp_JobTableLogStart]",
									"storedProcedureParameters": {
										"JobConfiguration": {
											"type": "String",
											"value": {
												"value": "@pipeline().parameters.JobConfiguration",
												"type": "Expression"
											}
										},
										"MasterProcessNumber": {
											"type": "Int32",
											"value": {
												"value": "@pipeline().parameters.MasterProcessNumber",
												"type": "Expression"
											}
										},
										"SchemaTable": {
											"type": "String",
											"value": {
												"value": "@item().SourceSchemaTable",
												"type": "Expression"
											}
										},
										"TableControlType": {
											"type": "String",
											"value": "DB2"
										},
										"TableID": {
											"type": "Int32",
											"value": {
												"value": "@item().TableID",
												"type": "Expression"
											}
										}
									}
								},
								"dataset": {
									"referenceName": "ds_framework",
									"type": "DatasetReference"
								},
								"firstRowOnly": false
							}
						},
						{
							"name": "SP_JobTableLogEnd_Success",
							"description": "This stored procedure updates the JobTableLog status after successful execution of previous steps. ",
							"type": "SqlServerStoredProcedure",
							"dependsOn": [
								{
									"activity": "SP_MetadataListUpdate",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"storedProcedureName": "[dbo].[usp_JobTableLogEnd_Success]",
								"storedProcedureParameters": {
									"JobTableLogID": {
										"value": {
											"value": "@{activity('LookUp_JobTableLogStart').output.value[0].JobTableLogID}",
											"type": "Expression"
										},
										"type": "Int32"
									}
								}
							},
							"linkedServiceName": {
								"referenceName": "ls_framework",
								"type": "LinkedServiceReference"
							}
						},
						{
							"name": "SP_JobTableLogEnd_Failure3",
							"description": "This stored procedures updates the status of the JobTableLog failed execution of previous steps.",
							"type": "SqlServerStoredProcedure",
							"dependsOn": [
								{
									"activity": "Copy_ADLStaging_ADLRaw",
									"dependencyConditions": [
										"Failed"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"storedProcedureName": "[dbo].[usp_JobTableLogEnd_Failure]",
								"storedProcedureParameters": {
									"JobTableLogID": {
										"value": {
											"value": "@{activity('LookUp_JobTableLogStart').output.value[0].JobTableLogID}",
											"type": "Expression"
										},
										"type": "Int32"
									}
								}
							},
							"linkedServiceName": {
								"referenceName": "ls_framework",
								"type": "LinkedServiceReference"
							}
						},
						{
							"name": "SP_JobTableLogEnd_Failure2",
							"description": "This stored procedures updates the status of the JobTableLog failed execution of previous steps.",
							"type": "SqlServerStoredProcedure",
							"dependsOn": [
								{
									"activity": "Switch_ServerName",
									"dependencyConditions": [
										"Failed"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"storedProcedureName": "[dbo].[usp_JobTableLogEnd_Failure]",
								"storedProcedureParameters": {
									"JobTableLogID": {
										"value": {
											"value": "@{activity('LookUp_JobTableLogStart').output.value[0].JobTableLogID}",
											"type": "Expression"
										},
										"type": "Int32"
									}
								}
							},
							"linkedServiceName": {
								"referenceName": "ls_framework",
								"type": "LinkedServiceReference"
							}
						},
						{
							"name": "Delete_ExistingStaging",
							"description": "This activity deletes all existing files in the destination staging folder for each file being copied.",
							"type": "Delete",
							"dependsOn": [
								{
									"activity": "Lookup_SourceSelectSQL",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"dataset": {
									"referenceName": "ds_adlsv2_autoresolveintegrationruntime_datalake_directory_binary",
									"type": "DatasetReference",
									"parameters": {
										"FolderPath": {
											"value": "@concat( item().DataLakeStagingFolder, '/', replace(item().TargetSchemaTable, '.', '_'))",
											"type": "Expression"
										}
									}
								},
								"enableLogging": false,
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true
								}
							}
						},
						{
							"name": "Delete_ExistingRaw",
							"description": "This activity deletes files that have the same start time as the current run (i.e. only when this is a rerun). Therefore, most of the time this activity will not delete any files and will fail. The pipeline will continue upon completion of this activity - not success.",
							"type": "Delete",
							"dependsOn": [
								{
									"activity": "Delete_ExistingStaging",
									"dependencyConditions": [
										"Completed"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"dataset": {
									"referenceName": "ds_adlsv2_autoresolveintegrationruntime_datalake_directory_binary",
									"type": "DatasetReference",
									"parameters": {
										"FolderPath": {
											"value": "@concat(replace(concat( item().DataLakeStagingFolder, '/', replace(item().TargetSchemaTable, '.', '_') ), 'staging', 'raw'), '/TS=',string(item().StartTime))",
											"type": "Expression"
										}
									}
								},
								"enableLogging": false,
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true
								}
							}
						},
						{
							"name": "Switch_ServerName",
							"type": "Switch",
							"dependsOn": [
								{
									"activity": "Delete_ExistingStaging",
									"dependencyConditions": [
										"Completed"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"on": {
									"value": "@toUpper(concat(item().SourceDataset,' -> ',item().TargetDataset))",
									"type": "Expression"
								},
								"cases": [
									{
										"value": "ds_sqlserver_SQL2017VMIntegrationruntime_sql -> ds_adlsv2_SQL2017VMIntegration_datalake",
										"activities": [
											{
												"name": "Copy_1",
												"description": "A query returns applicable data for each from the source system which is then copied into the target system in a staging folder. File path and name are dynamically derived from the Metadata lookup.",
												"type": "Copy",
												"dependsOn": [],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"source": {
														"type": "SqlSource",
														"sqlReaderQuery": {
															"value": "@activity('Lookup_SourceSelectSQL').output.firstRow.Query",
															"type": "Expression"
														},
														"queryTimeout": "02:00:00"
													},
													"sink": {
														"type": "ParquetSink",
														"storeSettings": {
															"type": "AzureBlobFSWriteSettings"
														}
													},
													"enableStaging": false,
													"parallelCopies": {
														"value": "@pipeline().parameters.JobParallelism",
														"type": "Expression"
													}
												},
												"inputs": [
													{
														"referenceName": "ds_sqlserver_SQL2017VMIntegrationruntime_sql",
														"type": "DatasetReference",
														"parameters":{
															"SecretName": {
																"value": "@item().SourceConnectionString",
																"type": "Expression"
															}
														}
													}
												],
												"outputs": [
													{
														"referenceName": "ds_adlsv2_SQL2017VMIntegration_datalake_file_parquet",
														"type": "DatasetReference",
														"parameters": {
															"FolderPath": {
																"value": "@concat( item().DataLakeStagingFolder, '/', replace(item().TargetSchemaTable, '.', '_') )",
																"type": "Expression"
															},
															"FileName": {
																"value": "@concat(item().TargetSchemaTable,'_',string(pipeline().parameters.MasterProcessNumber),'.parquet')",
																"type": "Expression"
															}
														}
													}
												]
											},
											{
												"name": "SP_JobTableLogUpdate_1",
												"description": "This stored procedure updates the JobTableLog with the SQL statement used and the number of rows read after successful execution of the copy from DB2 to staging",
												"type": "SqlServerStoredProcedure",
												"dependsOn": [
													{
														"activity": "Copy_1",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"storedProcedureName": "[dbo].[usp_JobTableLogIngestionUpdate]",
													"storedProcedureParameters": {
														"JobTableLogID": {
															"value": {
																"value": "@{activity('LookUp_JobTableLogStart').output.value[0].JobTableLogID}",
																"type": "Expression"
															},
															"type": "Int32"
														},
														"RowsCopied": {
															"value": {
																"value": "@activity('Copy_1').output.rowsCopied",
																"type": "Expression"
															},
															"type": "Int32"
														},
														"SqlStatementUsed": {
															"value": {
																"value": "@activity('Lookup_SourceSelectSQL').output.firstRow.Query",
																"type": "Expression"
															},
															"type": "String"
														}
													}
												},
												"linkedServiceName": {
													"referenceName": "ls_framework",
													"type": "LinkedServiceReference"
												}
											}
										]
									}
								]
							}
						},
						{
							"name": "Lookup_SourceSelectSQL",
							"description": "Using a stored procedure, outputs correct SQL to use to select rows from the source database.",
							"type": "Lookup",
							"dependsOn": [
								{
									"activity": "LookUp_JobTableLogStart",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "AzureSqlSource",
									"sqlReaderStoredProcedureName": "[dbo].[usp_MetadataListSourceSql]",
									"storedProcedureParameters": {
										"SourceSchemaTable": {
											"type": "String",
											"value": {
												"value": "@item().SourceSchemaTable",
												"type": "Expression"
											}
										},
										"EndDate": {
											"type": "String",
											"value": {
												"value": "@replace(coalesce(item().ControlEndDate, ''), 'T', ' ')",
												"type": "Expression"
											}
										},
										"FilterColumn": {
											"type": "String",
											"value": {
												"value": "@item().FilterColumn",
												"type": "Expression"
											}
										},
										"FilterColumnDataType": {
											"type": "String",
											"value": {
												"value": "@item().FilterColumnDataType",
												"type": "Expression"
											}
										},
										"FilterColumnValue": {
											"type": "String",
											"value": {
												"value": "@item().FilterColumnValue",
												"type": "Expression"
											}
										},
										"SelectQuery": {
											"type": "String",
											"value": {
												"value": "@item().SelectQuery",
												"type": "Expression"
											}
										},
										"SqlOverrideQuery": {
											"type": "String",
											"value": {
												"value": "@item().SqlOverrideQuery",
												"type": "Expression"
											}
										},
										"StartDate": {
											"type": "String",
											"value": {
												"value": "@replace(coalesce(item().ControlStartDate, ''), 'T', ' ')",
												"type": "Expression"
											}
										}
									},
									"queryTimeout": "02:00:00"
								},
								"dataset": {
									"referenceName": "ds_framework",
									"type": "DatasetReference"
								}
							}
						},
						{
							"name": "SP_MetadataListUpdate",
							"description": "This stored procedure updates the JobTableLog status after successful execution of previous steps. ",
							"type": "SqlServerStoredProcedure",
							"dependsOn": [
								{
									"activity": "If_LoadCurated",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"storedProcedureName": "[dbo].[usp_MetadataListUpdate]",
								"storedProcedureParameters": {
									"EndDate": {
										"value": {
											"value": "@item().ControlEndDate",
											"type": "Expression"
										},
										"type": "DateTime"
									},
									"JobTableLogID": {
										"value": {
											"value": "@{activity('LookUp_JobTableLogStart').output.value[0].JobTableLogID}",
											"type": "Expression"
										},
										"type": "Int32"
									},
									"ProcessNumber": {
										"value": {
											"value": "@item().ControlProcessNumber",
											"type": "Expression"
										},
										"type": "Int32"
									},
									"StartDate": {
										"value": {
											"value": "@item().ControlStartDate",
											"type": "Expression"
										},
										"type": "DateTime"
									}
								}
							},
							"linkedServiceName": {
								"referenceName": "ls_framework",
								"type": "LinkedServiceReference"
							}
						},
						{
							"name": "SP_JobTableLogEnd_Failure5",
							"description": "This stored procedures updates the status of the JobTableLog failed execution of previous steps.",
							"type": "SqlServerStoredProcedure",
							"dependsOn": [
								{
									"activity": "SP_MetadataListUpdate",
									"dependencyConditions": [
										"Failed"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"storedProcedureName": "[dbo].[usp_JobTableLogEnd_Failure]",
								"storedProcedureParameters": {
									"JobTableLogID": {
										"value": {
											"value": "@{activity('LookUp_JobTableLogStart').output.value[0].JobTableLogID}",
											"type": "Expression"
										},
										"type": "Int32"
									}
								}
							},
							"linkedServiceName": {
								"referenceName": "ls_framework",
								"type": "LinkedServiceReference"
							}
						},
						{
							"name": "If_LoadCurated",
							"type": "IfCondition",
							"dependsOn": [
								{
									"activity": "Copy_ADLStaging_ADLRaw",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"expression": {
									"value": "@item().LoadCurated",
									"type": "Expression"
								},
								"ifTrueActivities": [
									{
										"name": "adbx_LoadCuratedTables",
										"type": "DatabricksNotebook",
										"dependsOn": [],
										"policy": {
											"timeout": "7.00:00:00",
											"retry": 0,
											"retryIntervalInSeconds": 30,
											"secureOutput": false,
											"secureInput": false
										},
										"userProperties": [],
										"typeProperties": {
											"notebookPath": "/Data Lake Schema/Load Curated Tables",
											"baseParameters": {
												"SchemaTable": {
													"value": "@string(item().TargetSchemaTable)",
													"type": "Expression"
												},
												"PKColumnList": {
													"value": "@string(item().PKColumnList)",
													"type": "Expression"
												},
												"DataLakeStagingFolder": {
													"value": "@string(item().DataLakeStagingFolder)",
													"type": "Expression"
												}
											}
										},
										"linkedServiceName": {
											"referenceName": "ls_AzureDatabricks_DataAnalyticsQA_ADBX",
											"type": "LinkedServiceReference"
										}
									}
								]
							}
						},
						{
							"name": "SP_JobTableLogEnd_Failure4",
							"description": "This stored procedures updates the status of the JobTableLog failed execution of previous steps.",
							"type": "SqlServerStoredProcedure",
							"dependsOn": [
								{
									"activity": "If_LoadCurated",
									"dependencyConditions": [
										"Failed"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"storedProcedureName": "[dbo].[usp_JobTableLogEnd_Failure]",
								"storedProcedureParameters": {
									"JobTableLogID": {
										"value": {
											"value": "@{activity('LookUp_JobTableLogStart').output.value[0].JobTableLogID}",
											"type": "Expression"
										},
										"type": "Int32"
									}
								}
							},
							"linkedServiceName": {
								"referenceName": "ls_framework",
								"type": "LinkedServiceReference"
							}
						}
					]
				}
			},
			{
				"name": "SP_MasterJobEnd_Failure",
				"description": "This stored procedure receives the MasterProcessNumber as input and updates the status of the MasterJob table after failed execution of previous steps.",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "ForEach_CopyStagingRaw",
						"dependencyConditions": [
							"Failed"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[dbo].[usp_MasterJobEnd_Failure]",
					"storedProcedureParameters": {
						"MasterProcessNumber": {
							"value": {
								"value": "@pipeline().parameters.MasterProcessNumber",
								"type": "Expression"
							},
							"type": "Int32"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "ls_framework",
					"type": "LinkedServiceReference"
				}
			}
		],
		"parameters": {
			"JobConfiguration": {
				"type": "string",
				"defaultValue": "OverrideLoad"
			},
			"MasterProcessNumber": {
				"type": "int",
				"defaultValue": 395
			},
			"JobParallelism": {
				"type": "int",
				"defaultValue": 10
			}
		},
		"folder": {
			"name": "MasterPipeline"
		},
		"annotations": []
	},
	"type": "Microsoft.DataFactory/factories/pipelines"
}